name: Backend CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-basic:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Cache Maven repo
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: m2-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: m2-${{ runner.os }}-

      - name: Run tests
        run: mvn -B clean verify

      - name: Publish JUnit Summary
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: |
            **/target/surefire-reports/*.xml
            **/target/failsafe-reports/*.xml
          require_tests: false

      - name: Upload surefire/failsafe reports
        if: always()
        uses: actions/upload-artifacts@v4
        with:
          name: junit-reports
          path: |
            **/target/surefire-reports/*
            **/target/failsafe-reports/*
          retention-days: 7

  test-with-mongo:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Cache Maven repo
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: m2-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: m2-${{ runner.os }}-

      - name: Wait for MongoDB
        run: |
          echo "Waiting for MongoDB to be ready..."
          for i in {1..30}; do
            if mongosh --eval 'db.adminCommand("ping")' --quiet || mongo --eval 'db.adminCommand("ping")' --quiet; then
              echo "MongoDB is ready!"
              break
            fi
            echo "Waiting for MongoDB... ($i/30)"
            sleep 2
          done

      - name: Run tests (with Mongo)
        env:
          SPRING_DATA_MONGODB_URI: mongodb://localhost:27017/testdb
        run: mvn -B clean verify
